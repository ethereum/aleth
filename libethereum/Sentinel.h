/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_DEV_ETH_SENTINEL_H_
#define JSONRPC_CPP_STUB_DEV_ETH_SENTINEL_H_

#include <jsonrpccpp/client.h>

namespace dev {
    namespace eth {
        class Sentinel : public jsonrpc::Client
        {
            public:
                Sentinel(jsonrpc::IClientConnector &conn, jsonrpc::clientVersion_t type = jsonrpc::JSONRPC_CLIENT_V2) : jsonrpc::Client(conn, type) {}

                int eth_badBlock(const Json::Value& param1) throw (jsonrpc::JsonRpcException)
                {
                    Json::Value p;
                    p.append(param1);
                    Json::Value result = this->CallMethod("eth_badBlock",p);
                    if (result.isInt())
                        return result.asInt();
                    else
                        throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
                }
        };

    }
}
#endif //JSONRPC_CPP_STUB_DEV_ETH_SENTINEL_H_
