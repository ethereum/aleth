cmake_policy(SET CMP0015 NEW)

aux_source_directory(. SRC_LIST)

include_directories(../secp256k1)
include_directories(../libethereum)
link_directories(../libethereum)

add_executable(testeth ${SRC_LIST})

if (TARGET_WIN64)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -static-libgcc -static-libstdc++")
	target_link_libraries(testeth gcc)
	target_link_libraries(testeth gdi32)
	target_link_libraries(testeth ws2_32)
	target_link_libraries(testeth mswsock)
	target_link_libraries(testeth shlwapi)
	target_link_libraries(testeth iphlpapi)
	target_link_libraries(testeth cryptopp)
	target_link_libraries(testeth boost_system-mt-s)
	target_link_libraries(testeth boost_filesystem-mt-s)
	target_link_libraries(testeth boost_thread_win32-mt-s)
	set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS)
elseif (TARGET_LINUX OR TARGET_OSX)

else ()
	target_link_libraries(testeth ${CRYPTOPP_LIBRARIES})
	target_link_libraries(testeth boost_system)
	target_link_libraries(testeth boost_filesystem)	
	find_package(Threads REQUIRED)
	target_link_libraries(testeth ${CMAKE_THREAD_LIBS_INIT})
endif ()

if(TARGET_OSX)
	include_directories(/usr/local/include)
endif()

target_link_libraries(testeth ethereum)
target_link_libraries(testeth secp256k1)
target_link_libraries(testeth miniupnpc)
target_link_libraries(testeth gmp)
