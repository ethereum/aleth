/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_DEV_RPC_BZZFACE_H_
#define JSONRPC_CPP_STUB_DEV_RPC_BZZFACE_H_

#include "ModularServer.h"

namespace dev {
    namespace rpc {
        class BzzFace : public ServerInterface<BzzFace>
        {
            public:
                BzzFace()
                {
                    this->bindAndAddMethod(jsonrpc::Procedure("bzz_put", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING, "param1",jsonrpc::JSON_STRING, NULL), &dev::rpc::BzzFace::bzz_putI);
                    this->bindAndAddMethod(jsonrpc::Procedure("bzz_get", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING, "param1",jsonrpc::JSON_STRING, NULL), &dev::rpc::BzzFace::bzz_getI);
                }

                inline virtual void bzz_putI(const Json::Value &request, Json::Value &response)
                {
                    response = this->bzz_put(request[0u].asString());
                }
                inline virtual void bzz_getI(const Json::Value &request, Json::Value &response)
                {
                    response = this->bzz_get(request[0u].asString());
                }
                virtual std::string bzz_put(const std::string& param1) = 0;
                virtual std::string bzz_get(const std::string& param1) = 0;
        };

    }
}
#endif //JSONRPC_CPP_STUB_DEV_RPC_BZZFACE_H_
